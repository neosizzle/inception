#nginx configuratiopn, will modify it so that unencrypted HTTP requests are automatically redirected to encrypted HTTPS


# Default server configuration
#
server {
        listen 80 default_server; #listens for port 80 and makes this block as the default server
        listen [::]:80 default_server; #listens for port 80 and its subports and makes this block the default server
		server_name localhost; # tells nginx which domain to listen on
		return 301 https://$server_name$request_uri; # redirect to https when port 80 is hit
}

server {
        # SSL configuration
       	listen 443 ssl http2 default_server; #listen to port 443 (https)
		listen [::]:443 ssl http2 default_server; #listen to port 443 (https)

		include snippets/self-signed.conf; #include snippets for ssl configuration
		include snippets/ssl-params.conf; #include snippets for ssl configuration

        root /var/www/html/; #declare root directory to search for files to serve

        # declare index files to serve
        index index.html index.htm index.nginx-debian.html index.php;

		#host name
        server_name localhost;

		# catch '/' route
        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {

			fastcgi_split_path_info ^(.+\.php)(/.+)$; #regex to split path route
    		fastcgi_pass nszl-wordpress:9000; #proxy to fastcgi server running on another container
    		fastcgi_index index.php; #index file to server
    		include fastcgi_params; #include other vital default fastcgi parameters
    		fastcgi_param SCRIPT_FILENAME /wp_site$fastcgi_script_name; #path on container to obtain all php scripts
    		fastcgi_param PATH_INFO $fastcgi_path_info; #another vital fastcgi param which i have no idea what it is yet
        }
}

